//for positive numbers only
void fastscan(int &number) 
{ 
    register int c; 
    number = 0; 
    c=getchar_unlocked();

    for (; (c>47 && c<58); c=getchar_unlocked()) 
        number = number*10 + c - 48; 
}

int main() 
{ 
    int number; 
    fastscan(number); 
    cout << number << "\n"; 
    return 0; 
}



//for positive as well negative numbers with sign
void fastscan(int &number) 
{ 
    //variable to indicate sign of input number 
    bool negative = false; 
    register int c; 
  
    number = 0; 
  
    // extract current character from buffer 
    c = getchar(); 
    if (c=='-') 
    { 
        // number is negative 
        negative = true; 
  
        // extract the next character from the buffer 
        c = getchar(); 
    } 
  
    // Keep on extracting characters if they are integers 
    // i.e ASCII Value lies from '0'(48) to '9' (57) 
    for (; (c>47 && c<58); c=getchar()) 
        number = number *10 + c - 48; 
  
    // if scanned input has a negative sign, negate the 
    // value of the input number 
    if (negative) 
        number *= -1; 
} 
  
// Function Call 
int main() 
{ 
    int number; 
    fastscan(number); 
    cout << number << "\n"; 
    return 0; 
}



//for c++
//including this code and using cout<<"\n" instead of cout<<endl;
//the newline "\n" works faster than endl, because endl always causes a flush operation.
//this actually changes the cout and cin to work as printf and scanf
#include <bits/stdc++.h>
using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    return 0;
}